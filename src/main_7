// #include <Arduino.h>

// // Define the pins for sensing voltage and current
// const int voltageInputPin = A1; // Analog pin used to monitor PV module voltage
// const int currentInputPin = A8; // Analog pin used to monitor PV module current
// const int currentOutputMonitorPin = A5; // Analog pin used to monitor output current (IMON)
// const int currentControlPin = A4; // DAC output pin to control the converter (ICTRL)

// // Constant voltage output
// const double outputVoltage = 3.3; // The voltage output is always 3.3V

// // Variables to store the last and current measurements
// double lastInputPower = 0.0;
// bool increaseCurrent = true; // Direction of last perturbation, true for increase, false for decrease

// // Set the initial control voltage for ICTRL
// double controlVoltage = 0.5; // Start with a 0.5V which should be mid-range of current control

// // Perturbation size for the control voltage (fine-tune this value based on your system's response)
// const double perturbationSize = 0.01; // This is a small perturbation size for control voltage

// void setup() {
//   Serial.begin(9600);
//   pinMode(currentControlPin, OUTPUT);
//   analogWriteResolution(10); // Set the DAC resolution to 10-bit
// }

// void perturbCurrentControl() {
//   // Adapted to perturb the control voltage rather than the duty cycle
//   if (increaseCurrent) {
//     controlVoltage += perturbationSize;
//   } else {
//     controlVoltage -= perturbationSize;
//   }

//   // Constrain the control voltage to valid range (0 to 1V)
//   controlVoltage = constrain(controlVoltage, 0.0, 1.0);

//   // Convert the control voltage to a DAC value (10-bit resolution with 3.3V reference)
//   int dacValue = (int)(controlVoltage * 1023.0 / 3.3);

//   // Write the DAC value to the ICTRL pin
//   analogWrite(currentControlPin, dacValue);
  
//   // Add a delay for stability and give time for the voltage to settle
//   delay(1000);
// }


// // Function to read the input voltage from the PV module
// double readVoltage(int pin) {
//   int sensorValue = analogRead(pin);
//   return sensorValue * (3.3 / 1023.0);
// }

// // Function to read the input current from the PV module
// double readCurrent(int pin) {
//   int sensorValue = analogRead(pin);
//   return sensorValue * (3.3 / 1023.0);
// }

// // Function to calculate power from voltage and current
// double calculatePower(double voltage, double current) {
//   return voltage * current;
// }